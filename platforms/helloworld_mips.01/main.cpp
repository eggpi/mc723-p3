/******************************************************
 * This is the main file for the mips1 ArchC model    *
 * This file is automatically generated by ArchC      *
 * WITHOUT WARRANTY OF ANY KIND, either express       *
 * or implied.                                        *
 * For more information on ArchC, please visit:       *
 * http://www.archc.org                               *
 *                                                    *
 * The ArchC Team                                     *
 * Computer Systems Laboratory (LSC)                  *
 * IC-UNICAMP                                         *
 * http://www.lsc.ic.unicamp.br                       *
 ******************************************************/
 
// Rodolfo editou aqui
//
const char *project_name="mips1";
const char *project_file="mips1.ac";
const char *archc_version="2.0beta1";
const char *archc_options="-abi -dy ";

#include  <systemc.h>
#include  "mips1.H"
#include  "ac_tlm_mem.h"
#include  "ac_tlm_bus.h"

using user::ac_tlm_mem;
using user::ac_tlm_bus;

char **
duplicate_argv(int argc, char **argv) {
  char **new_argv = (char **) malloc(argc * sizeof(char *));
  for (int i = 0; i < argc; ++i) {
    new_argv[i] = strdup(argv[i]);
  }

  return new_argv;
}

int sc_main(int ac, char *av[])
{

  //!  ISA simulator
  mips1 mips1_proc1("mips1");
  mips1 mips1_proc2("mips2");

  ac_tlm_mem mem("mem");
  ac_tlm_bus mem_bus("bus");

#ifdef AC_DEBUG
  ac_trace("mips1_proc1.trace");
#endif 

  mips1_proc1.DM_port(mem_bus.target_export[0]);
  mips1_proc2.DM_port(mem_bus.target_export[1]);

  mem_bus.DM_port(mem.target_export);

  mips1_proc1.init(ac, duplicate_argv(ac, av));
  mips1_proc2.init(ac, duplicate_argv(ac, av));
  cerr << endl;

  mips1_proc1.ac_wait_sig = 0; // bootstrap processor
  mips1_proc2.ac_wait_sig = 1;
  sc_start();

  mips1_proc1.PrintStat();
  cerr << endl;

#ifdef AC_STATS
  mips1_proc1.ac_sim_stats.time = sc_simulation_time();
  mips1_proc1.ac_sim_stats.print();
#endif 

#ifdef AC_DEBUG
  ac_close_trace();
#endif 

  return mips1_proc1.ac_exit_status;
}
